@import url(//fonts.googleapis.com/earlyaccess/nanumbrushscript.css);

.nanumbrushscript {
  font-family: 'Nanum Brush Script', cursive;
}
:root {
  --wheel-font: 'Nanum Brush Script', 'Quicksand', sans-serif;
  --wheel-size: 700px;
  --wheel-slice-spacing: 50px;
  --wheel-border-size: 5px;
  --wheel-color: #f48457;
  --neutral-color: #edf5f8;
  --PI: 3.14159265358979;
  --nb-item: 0;
  --item-nb: 0;
  --selected-item: 0;
  --nb-turn: 5;
  --counter: 1;
  --spinning-duration: 4s;
  --reset-duration: 0.25s;
}

/* Conteneur de la roue = cercle rose extérieur */
.wheel-container {
  display: block;
  position: relative;
  box-sizing: content-box;
  width: calc(var(--wheel-size) + 2 * var(--wheel-border-size));
  height: calc(var(--wheel-size) + 2 * var(--wheel-border-size));
  padding: 3px;
  margin: auto;
  background: url(../../img/wheel2.png) no-repeat center center;
  background-size: 100% 100%;
  border: solid #465e73 3px;
  border-radius: 50%;
  user-select: none;
}

/* Triangle de sélection = 1 rose +  1 blanc */
.wheel-container::before,
.wheel-container::after {
  content: '';
  display: block;
  position: absolute;
  height: 0;
  width: 0;
  top: 50%;
  transform: translateY(-50%);
  z-index: 2;
  border: solid transparent 20px;
  border-left-width: 0;
}

.wheel-container::before {
  right: 0px;
  border-right-color: #465e73;
}

.wheel-container::after {
  right: -5px;
  border-right-color: var(--neutral-color);
}

/* Roue */
.wheel {
  display: block;
  position: relative;
  box-sizing: content-box;
  margin: auto;
  width: var(--wheel-size);
  height: var(--wheel-size);
  overflow: hidden;
  border-radius: 50%;
  background-size: 100% 100%;
  transition: transform var(--reset-duration);
  transform: rotate(0deg);
  cursor: pointer;
  margin-top: 5px;
}

.wheel.spinning {
  transition: transform var(--spinning-duration);
  transform: rotate(
    calc(
      var(--nb-turn) * 360deg * var(--counter) +
        (-360deg * var(--selected-item) / var(--nb-item, 1))
    )
  );
}

/* Centre de la roue = rond blanc au centre */
.wheel::after {
  display: block;
  position: absolute;
  content: '';
  background-color: var(--neutral-color);
  width: 25px;
  height: 25px;
  z-index: 2;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
}

/* Element sur la roue */
.wheel-item {
  display: block;
  position: absolute;
  box-sizing: border-box;
  font-size: 150px;
  /* position de l'item */
  top: 50%;
  left: 50%;
  width: 50%;
  transform-origin: center left;
  transform: translateY(-50%)
    rotate(calc(var(--item-nb) * (360deg / var(--nb-item, 1))));

  /* texte */
  color: #2a4546;
  text-align: right;
  padding: 0 85px 0 50px;
  font-family: var(--wheel-font);
}

/* Background de l'élément = triangle rose plus clair */
.wheel-item:before {
  content: ' ';
  display: block;
  position: absolute;
  box-sizing: border-box;
  z-index: -1;
  width: 0;
  height: 0;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  padding-left: 0px;
  opacity: 1;

  /*
      Largeur du triangle
      Je ne sais pas pourquoi j'ai besoin d'ajouter
        " + var(--wheel-size) / 2 " dans slice-max-width  ==> donne 2.PI.R + R
      mais globalement ca marche a peu près bien
      TODO: A étudier
    */
  --slice-max-width: calc(
    var(--PI) * var(--wheel-size) + var(--wheel-size) / 2
  );
  --slice-width: calc(
    (var(--slice-max-width) / var(--nb-item)) - var(--wheel-slice-spacing)
  );
  border: solid transparent calc(var(--slice-width) / 2);
  border-left: solid transparent 6px;
  /* profondeur du triangle = du centre de la roue à la bordure = 300px / 2 */
  border-right: solid var(--neutral-color) calc(var(--wheel-size) / 2);
}

.wheel-bg {
  display: flex;
  align-items: center;
  justify-content: center;
}

.attack-modal {
  z-index: 100;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  background: rgba(0, 0, 0, 0.5);
}
.attack-modal-close {
  height: 20px;
  position: absolute;
  right: 50px;
  cursor: pointer;
  color: #fff;
  font-size: 20px;
  right: 0;
}

.attack-modal-content {
  -webkit-text-stroke: 1px white;

  font-size: 200px;
  font-weight: 600;
  color: blue;
  position: relative;
  max-width: 70%;
}
.attack-modal-content p {
  word-break: break-all;
  text-align: center;
}

.attack-modal-content p.attack-info {
  font-size: 100px;
  font-weight: 200;
  color: red;
  position: relative;
  max-width: 100%;
}
